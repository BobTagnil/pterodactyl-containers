(@- load("@ytt:assert", "assert") -@)
(@- load("@ytt:data", "data") -@)

(@- data.values.panel.domain or assert.fail("Panel domain is not configured!") -@)
(@- data.values.panel.database.auth.password or assert.fail("MySQL password is not configured!") -@)

##
# Pterodactyl Container Variables
#
# DO NOT OVERWRITE WITH PTERODACTYL ".env" CONFIGURATIONS!
# This configuration may look like it has pterodactyl
# variables, and it does, however this config also contains
# variables to initialize/setup the containers. If you are migrating
# or planning to use /data/pterodactyl.conf for all your variables,
# remove anything after "panel variables" stated.
##

##
# Container Variables
##

(@ if data.values.letsencrypt.email: -@)
SSL_CERT=/etc/letsencrypt/live/(@= data.values.panel.domain @)/fullchain.pem
SSL_CERT_KEY=/etc/letsencrypt/live/(@= data.values.panel.domain @)/privkey.pem
(@- else: -@)
SSL_CERT=(@= data.values.panel.ssl.cert or "/etc/certs/cert.pem" @)
SSL_CERT_KEY=(@= data.values.panel.ssl.key or "/etc/certs/cert.key" @)
(@- end @)

##
# Panel Variables
# These variables can be used within pterodactyl.conf (.env when symlinked 
# into the docker webroot). These variables are also set via pterodactyl:env
# and pterodactyl:mail.
##

(@ if data.values.letsencrypt.email or (data.values.panel.ssl.cert and data.values.panel.ssl.key): -@)
APP_URL=https://(@= data.values.panel.domain @)/
(@ else: -@)
APP_URL=http://(@= data.values.panel.domain @)/
(@ end -@)

APP_ENV=production
APP_DEBUG=false
APP_TIMEZONE=America/New_York
APP_CLEAR_TASKLOG=720
APP_DELETE_MINUTES=10
LOG_CHANNEL=daily
APP_LOCALE=en

# Cache/Session Settings
CACHE_DRIVER=redis
SESSION_DRIVER=redis
QUEUE_CONNECTION=redis

# Redis Settings
REDIS_HOST=redis
REDIS_PORT=6379

# MySQL Settings
DB_HOST=mariadb
DB_PORT=3306
DB_DATABASE=(@= data.values.panel.database.schema @)
DB_USERNAME=(@= data.values.panel.database.auth.username @)
DB_PASSWORD=(@= data.values.panel.database.auth.password @)

QUEUE_HIGH=high
QUEUE_STANDARD=standard
QUEUE_LOW=low