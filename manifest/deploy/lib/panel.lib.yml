#@ load("@ytt:data", "data")
#@ load("@ytt:template", "template")

#@ def panel_service():
  panel:
    #@ if/end data.values.docker.build:
    build:
      args:
        VERSION: ${PANEL_VERSION}
      context: ./manifest/images/panel
    depends_on:
    - mariadb
    - redis
    env_file: ./conf.d/panel.env
    #@yaml/text-templated-strings
    image: (@= data.values.panel.image @)
    #@ if/end data.values.panel.network.expose:
    ports:
    #@yaml/text-templated-strings
    - (@= data.values.panel.network.ip_addr @):(@= str(data.values.panel.network.ports.http) @):80
    #@yaml/text-templated-strings
    - (@= data.values.panel.network.ip_addr @):(@= str(data.values.panel.network.ports.https) @):443
    restart: always
    volumes:
    - ./conf.d/certs:/etc/certs
    - ./data/letsencrypt:/etc/letsencrypt
    - ./data/letsencrypt/webroot/.well-known:/var/www/html/public/.well-known
    - ./data/panel:/data
  worker:
    command: wait-for -t 5 panel:80 -- php /var/www/html/artisan queue:work --queue=high,standard,low --sleep=3 --tries=3
    depends_on:
    - panel
    env_file: ./conf.d/panel.env
    #@yaml/text-templated-strings
    image: (@= data.values.panel.image @):${PANEL_VERSION:-latest}
    restart: always
    volumes_from:
    - panel
  mariadb:
    image: docker.io/mariadb:10.4
    env_file: ./conf.d/mariadb.env
    restart: always
    volumes:
    - ./data/mariadb:/var/lib/mysql
  redis:
    cpu_count: 2
    cpu_percent: 50
    image: docker.io/redis:alpine
    mem_limit: 128m
    restart: always
#@ end